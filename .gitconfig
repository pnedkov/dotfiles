[include]
	path = ~/.gitconfig.id
[alias]
	a = add
	aa = add --all
	ai = add -i
	ap = add --patch

	ay = apply
	ays = apply --stat
	ayc = apply --check

	b = branch
	ba = branch -a
	bd = branch -d
	br = branch -r

	c = commit
	ca = commit -a
	ci = commit -i
	cf = "!f() { vim $1; git ci $1; }; f"
	cp = commit -p
	cm = commit -m
	cam = commit -am
	cd = commit --amend
	cad = commit -a --amend

	d = diff
	dc = diff --cached
	ds = diff --staged
	dt = difftool
	dlc = difftool --cached
	dk = diff --check
	dp = diff --patience
	dck = diff --cached --check

	f = fetch
	fp = fetch -p
	fo = fetch origin
	fu = fetch upstream

	g = grep -p

	l = log --oneline --graph --decorate
	lg = log -m --branches --graph --abbrev-commit --decorate --date=relative --pretty=tformat:'%C(bold blue)%h%C(reset)%C(auto)%d -%C(reset) %C(auto)%s%C(reset) %C(white)[a:%an] [c:%cn]%C(reset) %C(green)(%ar)%C(reset)'
	lp = log -m --branches --graph --follow -p

	ls = ls-files
	lsf = "!git ls-files | grep -i"

	m = merge
	ma = merge --abort
	mc = merge --continue
	ms = merge --skip

	o = checkout
	ob = checkout -b
	oc = checkout .
	op = checkout -p

	pr = prune -v

	ps = push
	psf = push -f
	psa = push --all
	psaf = push --all -f
	psum = push upstream master

	pl = pull
	plo = pull origin
	plb = pull --rebase
	plum = pull upstream master

	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbi = rebase --interactive
	rbs = rebase --skip
	rbh = "!f() { git rebase -i HEAD~$1; }; f"

	re = reset
	rh = reset HEAD
	reh = reset --hard
	rem = reset --mixed
	res = reset --soft
	rehh = reset --hard HEAD
	remh = reset --mixed HEAD
	resh = reset --soft HEAD

	r = remote
	ra = remote add
	rr = remote rm
	rv = remote -v
	rm = remote rename
	rp = remote prune
	rs = remote show
	rao = remote add origin
	rau = remote add upstream
	rso = remote show origin
	rsu = remote show upstream
	rpo = remote prune origin
	rpu = remote prune upstream

	s = status -s
	sb = status -s -b

	sa = stash apply
	sc = stash clear
	sd = stash drop
	sl = stash list
	sp = stash pop
	ss = stash save
	sw = stash show

	w = show --color
	ws = show --color -C --stat

	ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"

	whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
	whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short

	change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch -f --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f "
[diff]
	tool = vimdiff
[difftool]
	prompt = false
[core]
	editor = /usr/bin/vim
	whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol
[credential]
	helper = cache --timeout=2419200
[rerere]
	enabled = true
	autoupdate = true
[diff "ansible-vault"]
	textconv = ansible-vault view
	#cachetextconv = true
[rebase]
	autoStash = true
[branch]
	autosetuprebase = always
[pull]
	rebase = true
